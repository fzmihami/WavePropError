<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="Boundaries_8cpp" kind="file" language="C++">
    <compoundname>Boundaries.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="no">math.h</includes>
    <includes local="no">omp.h</includes>
    <includes refid="Boundaries_8h" local="yes">Boundaries.h</includes>
    <incdepgraph>
      <node id="7">
        <label>Boundaries.h</label>
        <link refid="Boundaries_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>GlobalVariables.h</label>
        <link refid="GlobalVariables_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ReadUserInput.h</label>
        <link refid="ReadUserInput_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>TimeVariables.h</label>
        <link refid="TimeVariables_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>code/src/Boundaries.cpp</label>
        <link refid="Boundaries_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>cstring</label>
      </node>
      <node id="11">
        <label>fstream</label>
      </node>
      <node id="12">
        <label>iomanip</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>omp.h</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="Boundaries_8cpp_1a15939cb64e963cfec3ae091f8b888865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpongeLayer</definition>
        <argsstring>(State &amp;S1)</argsstring>
        <name>ApplySpongeLayer</name>
        <param>
          <type><ref refid="classState" kindref="compound">State</ref> &amp;</type>
          <declname>S1</declname>
        </param>
        <briefdescription>
<para>Applies the sponge-layer boundary condition to the left and right boundaries of the computational domain. This fucntion is based on the approach described in Larsen and Dancy (1983). </para>
        </briefdescription>
        <detaileddescription>
<para>This function modifies the following variables in the <computeroutput><ref refid="classState" kindref="compound">State</ref></computeroutput> object <computeroutput>S1</computeroutput> for grid points inside the sponge layer:<itemizedlist>
<listitem><para><computeroutput>S1.Eta</computeroutput>: The water surface elevation.</para>
</listitem><listitem><para><computeroutput>S1.Hn</computeroutput>: The total water depth.</para>
</listitem><listitem><para><computeroutput>S1.Un</computeroutput>: The horizontal velocity.</para>
</listitem><listitem><para><computeroutput>S1.Pn</computeroutput>: The conserved momentum in Nwogu&apos;s equation.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>S1</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the <computeroutput><ref refid="classState" kindref="compound">State</ref></computeroutput> object containing wave field variables at the current time step t. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/src/Boundaries.cpp" line="20" column="6" bodyfile="code/src/Boundaries.cpp" bodystart="20" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of functions for applying the sponge-layer boundary condition in the numerical wave solver to absorb incoming waves. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the implementation of the <computeroutput>ApplySpongeLayer</computeroutput> function, which applies a sponge layer to the left and right boundaries of the computational domain. The sponge layer is used to absorb incoming waves and prevent reflections from the boundaries. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Boundaries_8h" kindref="compound">Boundaries.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Boundaries_8cpp_1a15939cb64e963cfec3ae091f8b888865" kindref="member">ApplySpongeLayer</ref>(<ref refid="classState" kindref="compound">State</ref><sp/>&amp;S1)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>S1.<ref refid="classState_1a92c45c45d00a0c31904d49a70940a4c0" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>left<sp/>sponge<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="GlobalVariables_8h_1a1e55a637d0220456f6caa6823b1efda9" kindref="member">nSP</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Cs<sp/>=<sp/>pow(<ref refid="GlobalVariables_8h_1a7dce376424d554a29a3742d3dbfc7ee3" kindref="member">alphaSP</ref>,<sp/>pow(<ref refid="GlobalVariables_8h_1a6a322c5e57d95bf50f6478579c28b9cd" kindref="member">gammaSP</ref>,<sp/>i));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>-<sp/>S1.<ref refid="classState_1a40dda08f046cda018543a53e8bcea15f" kindref="member">Zn</ref>[i];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>sponge<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S1.<ref refid="classState_1ada483a41be06c799e60b0d32edb9a79e" kindref="member">Grid</ref><sp/>==<sp/><ref refid="GlobalVariables_8h_1a52bdd18b63ba2ec1780aecd91679ee4aa76cd586ddbfd4198a38e9b4ed4ebf900" kindref="member">grid::staggered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>N<sp/>-<sp/><ref refid="GlobalVariables_8h_1a1e55a637d0220456f6caa6823b1efda9" kindref="member">nSP</ref>;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Cs<sp/>=<sp/>pow(<ref refid="GlobalVariables_8h_1a7dce376424d554a29a3742d3dbfc7ee3" kindref="member">alphaSP</ref>,<sp/>pow(<ref refid="GlobalVariables_8h_1a6a322c5e57d95bf50f6478579c28b9cd" kindref="member">gammaSP</ref>,<sp/>N<sp/>-<sp/>1<sp/>-<sp/>i));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>-<sp/>S1.<ref refid="classState_1a40dda08f046cda018543a53e8bcea15f" kindref="member">Zn</ref>[i];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i<sp/>+<sp/>1]<sp/>=<sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i<sp/>+<sp/>1]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i<sp/>+<sp/>1]<sp/>=<sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i<sp/>+<sp/>1]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>N<sp/>-<sp/><ref refid="GlobalVariables_8h_1a1e55a637d0220456f6caa6823b1efda9" kindref="member">nSP</ref>;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Cs<sp/>=<sp/>pow(<ref refid="GlobalVariables_8h_1a7dce376424d554a29a3742d3dbfc7ee3" kindref="member">alphaSP</ref>,<sp/>pow(<ref refid="GlobalVariables_8h_1a6a322c5e57d95bf50f6478579c28b9cd" kindref="member">gammaSP</ref>,<sp/>N<sp/>-<sp/>1<sp/>-<sp/>i));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a2094315fb752fa99dbe6fcf5b373db76" kindref="member">Eta</ref>[i]<sp/>-<sp/>S1.<ref refid="classState_1a40dda08f046cda018543a53e8bcea15f" kindref="member">Zn</ref>[i];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>/<sp/>Cs;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="code/src/Boundaries.cpp"/>
  </compounddef>
</doxygen>
