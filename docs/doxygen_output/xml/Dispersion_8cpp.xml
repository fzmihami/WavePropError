<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="Dispersion_8cpp" kind="file" language="C++">
    <compoundname>Dispersion.cpp</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="no">math.h</includes>
    <includes local="no">omp.h</includes>
    <includes refid="Dispersion_8h" local="yes">Dispersion.h</includes>
    <incdepgraph>
      <node id="6">
        <label>Dispersion.h</label>
        <link refid="Dispersion_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>GlobalVariables.h</label>
        <link refid="GlobalVariables_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ReadUserInput.h</label>
        <link refid="ReadUserInput_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>TimeVariables.h</label>
        <link refid="TimeVariables_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>code/src/Dispersion.cpp</label>
        <link refid="Dispersion_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstring</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>omp.h</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="Dispersion_8cpp_1a5a035cdd8f6decd41a4650e0828110e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ThomasAlgorithm</definition>
        <argsstring>(const float *a, const float *b, const float *c, float *d, int n)</argsstring>
        <name>ThomasAlgorithm</name>
        <param>
          <type>const float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Solves a tridiagonal system of equations using the Thomas algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para>This function modifies the input arrays <computeroutput>d</computeroutput> in place to contain the solution to the system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower diagonal coefficients of the tridiagonal matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Main diagonal coefficients of the tridiagonal matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper diagonal coefficients of the tridiagonal matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Right-hand side vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/src/Dispersion.cpp" line="151" column="6" bodyfile="code/src/Dispersion.cpp" bodystart="151" bodyend="174"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Defines the <ref refid="classDispersion" kindref="compound">Dispersion</ref> class for computing dispersive terms in the numerical wave solver. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the implementation of the <ref refid="classDispersion" kindref="compound">Dispersion</ref> class, which handles the calculation and application of dispersive terms in both the continuity and momentum equations. It also includes a method for solving a tridiagonal system using the Thomas algorithm to compute the velocity field. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Dispersion_8h" kindref="compound">Dispersion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="classDispersion_1a65c18a6718364baa8411208b43591504" kindref="member">Dispersion::Dispersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classState" kindref="compound">State</ref><sp/>&amp;S0)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>this-&gt;N<sp/>=<sp/>S0.<ref refid="classState_1a92c45c45d00a0c31904d49a70940a4c0" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classDispersion_1a0a97fe146fa93ff5596d2c5aa2ed6be2" kindref="member">PhiC</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1a0a97fe146fa93ff5596d2c5aa2ed6be2" kindref="member">PhiC</ref>,<sp/>0,<sp/>N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S0.<ref refid="classState_1ada483a41be06c799e60b0d32edb9a79e" kindref="member">Grid</ref><sp/>==<sp/><ref refid="GlobalVariables_8h_1a52bdd18b63ba2ec1780aecd91679ee4aa76cd586ddbfd4198a38e9b4ed4ebf900" kindref="member">grid::staggered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1a6d366770689c550765e3ccea7ed17034" kindref="member">PhiM</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1a6d366770689c550765e3ccea7ed17034" kindref="member">PhiM</ref>,<sp/>0,<sp/>(N<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>,<sp/>0,<sp/>(N<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1ae49bffaf5c4d3d5323e54ce42d8a4127" kindref="member">D1</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1ae49bffaf5c4d3d5323e54ce42d8a4127" kindref="member">D1</ref>,<sp/>0,<sp/>(N<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1abfaf79e98f25c390ebaacc26ad59310e" kindref="member">D2</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1abfaf79e98f25c390ebaacc26ad59310e" kindref="member">D2</ref>,<sp/>0,<sp/>(N<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1afb9ae6690fa9deb41081640ff64d0500" kindref="member">D3</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1afb9ae6690fa9deb41081640ff64d0500" kindref="member">D3</ref>,<sp/>0,<sp/>(N<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1a6d366770689c550765e3ccea7ed17034" kindref="member">PhiM</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1a6d366770689c550765e3ccea7ed17034" kindref="member">PhiM</ref>,<sp/>0,<sp/>N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>,<sp/>0,<sp/>N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1ae49bffaf5c4d3d5323e54ce42d8a4127" kindref="member">D1</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1ae49bffaf5c4d3d5323e54ce42d8a4127" kindref="member">D1</ref>,<sp/>0,<sp/>N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1abfaf79e98f25c390ebaacc26ad59310e" kindref="member">D2</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1abfaf79e98f25c390ebaacc26ad59310e" kindref="member">D2</ref>,<sp/>0,<sp/>N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classDispersion_1afb9ae6690fa9deb41081640ff64d0500" kindref="member">D3</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[N];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(this-&gt;<ref refid="classDispersion_1afb9ae6690fa9deb41081640ff64d0500" kindref="member">D3</ref>,<sp/>0,<sp/>N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>diagonal<sp/>terms<sp/>of<sp/>the<sp/>diseprion<sp/>matrix<sp/>can<sp/>be<sp/>precomputed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>they<sp/>only<sp/>depend<sp/>on<sp/>the<sp/>still<sp/>water<sp/>level,<sp/>which<sp/>assumed<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constant<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dn<sp/>=<sp/>S0.<ref refid="classState_1a9a7fd7b6579d141f3d0dc2d74adf9b14" kindref="member">depth</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_end<sp/>=<sp/>S0.<ref refid="classState_1ada483a41be06c799e60b0d32edb9a79e" kindref="member">Grid</ref><sp/>==<sp/><ref refid="GlobalVariables_8h_1a52bdd18b63ba2ec1780aecd91679ee4aa76cd586ddbfd4198a38e9b4ed4ebf900" kindref="member">grid::staggered</ref><sp/>?<sp/>N<sp/>+<sp/>1<sp/>:<sp/>N;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>i_end;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispersion_1abfaf79e98f25c390ebaacc26ad59310e" kindref="member">D2</ref>[i]<sp/>=<sp/>1.0<sp/>-<sp/>2<sp/>*<sp/><ref refid="GlobalVariables_8h_1aca7f35c8ae5f70eaffe705ebc6766585" kindref="member">alpha1</ref><sp/>*<sp/>dn<sp/>*<sp/>dn<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref><sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>i_end<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispersion_1ae49bffaf5c4d3d5323e54ce42d8a4127" kindref="member">D1</ref>[i]<sp/>=<sp/><ref refid="GlobalVariables_8h_1aca7f35c8ae5f70eaffe705ebc6766585" kindref="member">alpha1</ref><sp/>*<sp/>dn<sp/>*<sp/>dn<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref><sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>i_end;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispersion_1afb9ae6690fa9deb41081640ff64d0500" kindref="member">D3</ref>[i]<sp/>=<sp/><ref refid="GlobalVariables_8h_1aca7f35c8ae5f70eaffe705ebc6766585" kindref="member">alpha1</ref><sp/>*<sp/>dn<sp/>*<sp/>dn<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref><sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="classDispersion_1a686beccff78fed61a363efa654fd3446" kindref="member">Dispersion::~Dispersion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classDispersion_1a0a97fe146fa93ff5596d2c5aa2ed6be2" kindref="member">PhiC</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classDispersion_1a6d366770689c550765e3ccea7ed17034" kindref="member">PhiM</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDispersion_1a47a0c75361054ac95fcf4ef6d1be60ac" kindref="member">Dispersion::ComputeDispersion</ref>(<ref refid="classState" kindref="compound">State</ref><sp/>&amp;S0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>second-order<sp/>derivative<sp/>of<sp/>the<sp/>velocity<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_end<sp/>=<sp/>S0.<ref refid="classState_1ada483a41be06c799e60b0d32edb9a79e" kindref="member">Grid</ref><sp/>==<sp/><ref refid="GlobalVariables_8h_1a52bdd18b63ba2ec1780aecd91679ee4aa76cd586ddbfd4198a38e9b4ed4ebf900" kindref="member">grid::staggered</ref><sp/>?<sp/>N<sp/>+<sp/>1<sp/>:<sp/>N;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>i_end<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i]<sp/>=<sp/>(S0.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i<sp/>+<sp/>1]<sp/>-<sp/>2.0<sp/>*<sp/>S0.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>+<sp/>S0.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i<sp/>-<sp/>1])<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref><sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>dispersive<sp/>terms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S0.<ref refid="classState_1ada483a41be06c799e60b0d32edb9a79e" kindref="member">Grid</ref><sp/>==<sp/><ref refid="GlobalVariables_8h_1a52bdd18b63ba2ec1780aecd91679ee4aa76cd586ddbfd4198a38e9b4ed4ebf900" kindref="member">grid::staggered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>S0.<ref refid="classState_1a9a7fd7b6579d141f3d0dc2d74adf9b14" kindref="member">depth</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Za<sp/>=<sp/>S0.<ref refid="classState_1a9a7fd7b6579d141f3d0dc2d74adf9b14" kindref="member">depth</ref><sp/>*<sp/><ref refid="GlobalVariables_8h_1a8f669f98a450c90b372af97dbe393064" kindref="member">gamma1</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispersion_1a0a97fe146fa93ff5596d2c5aa2ed6be2" kindref="member">PhiC</ref>[i]<sp/>=<sp/>(pow(Za,<sp/>2)<sp/>/<sp/>2.0f<sp/>-<sp/>pow(h,<sp/>2)<sp/>/<sp/>6.0f)<sp/>*<sp/>h<sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i<sp/>+<sp/>1]<sp/>-<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i])<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref><sp/>+</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Za<sp/>+<sp/>h<sp/>/<sp/>2.0f)<sp/>*<sp/>h<sp/>*<sp/>h<sp/>*<sp/>(<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i<sp/>+<sp/>1]<sp/>-<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i])<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispersion_1a6d366770689c550765e3ccea7ed17034" kindref="member">PhiM</ref>[i]<sp/>=<sp/>pow(Za,<sp/>2)<sp/>/<sp/>2.0f<sp/>*<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i]<sp/>+<sp/>Za<sp/>*<sp/>h<sp/>*<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDispersion_1a0a97fe146fa93ff5596d2c5aa2ed6be2" kindref="member">PhiC</ref>[N<sp/>-<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>N<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>S0.<ref refid="classState_1a9a7fd7b6579d141f3d0dc2d74adf9b14" kindref="member">depth</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Za<sp/>=<sp/>S0.<ref refid="classState_1a9a7fd7b6579d141f3d0dc2d74adf9b14" kindref="member">depth</ref><sp/>*<sp/><ref refid="GlobalVariables_8h_1a8f669f98a450c90b372af97dbe393064" kindref="member">gamma1</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispersion_1a0a97fe146fa93ff5596d2c5aa2ed6be2" kindref="member">PhiC</ref>[i]<sp/>=<sp/>(pow(Za,<sp/>2)<sp/>/<sp/>2.0f<sp/>-<sp/>pow(h,<sp/>2)<sp/>/<sp/>6.0f)<sp/>*<sp/>h<sp/>*</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i<sp/>+<sp/>1]<sp/>-<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i<sp/>-<sp/>1])<sp/>*<sp/>(0.5f<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref>)<sp/>+</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Za<sp/>+<sp/>h<sp/>/<sp/>2.0f)<sp/>*<sp/>h<sp/>*<sp/>h<sp/>*<sp/>(<ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i<sp/>+<sp/>1]<sp/>-<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i<sp/>-<sp/>1])<sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.5f<sp/>*<sp/>S0.<ref refid="classState_1a3a9010910d0d229557f5d4a196180f70" kindref="member">dx_1</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDispersion_1a6d366770689c550765e3ccea7ed17034" kindref="member">PhiM</ref>[i]<sp/>=<sp/>pow(Za,<sp/>2)<sp/>/<sp/>2.0f<sp/>*<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i]<sp/>+<sp/>Za<sp/>*<sp/>h<sp/>*<sp/><ref refid="classDispersion_1a0558a889fa184573627f6c6f7ad2ae72" kindref="member">Uxx</ref>[i];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDispersion_1a37aff1717dbf3526460d162ffd1de9fb" kindref="member">Dispersion::SolveTridiagonalMatrix</ref>(<ref refid="classState" kindref="compound">State</ref><sp/>&amp;S1)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>the<sp/>tridiagonal<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_end<sp/>=<sp/>S1.<ref refid="classState_1ada483a41be06c799e60b0d32edb9a79e" kindref="member">Grid</ref><sp/>==<sp/><ref refid="GlobalVariables_8h_1a52bdd18b63ba2ec1780aecd91679ee4aa76cd586ddbfd4198a38e9b4ed4ebf900" kindref="member">grid::staggered</ref><sp/>?<sp/>N<sp/>+<sp/>1<sp/>:<sp/>N;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>Un</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S1.<ref refid="classState_1ada483a41be06c799e60b0d32edb9a79e" kindref="member">Grid</ref><sp/>==<sp/><ref refid="GlobalVariables_8h_1a52bdd18b63ba2ec1780aecd91679ee4aa76cd586ddbfd4198a38e9b4ed4ebf900" kindref="member">grid::staggered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N<sp/>+<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>H1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H1<sp/>=<sp/>S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>N)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H1<sp/>=<sp/>S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H1<sp/>=<sp/>0.5<sp/>*<sp/>(S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i]<sp/>+<sp/>S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(H1<sp/>&gt;<sp/><ref refid="GlobalVariables_8h_1a777989279445ddc055c317df60b3dd64" kindref="member">hmin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i]<sp/>/<sp/>H1;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i]<sp/>&gt;<sp/><ref refid="GlobalVariables_8h_1a777989279445ddc055c317df60b3dd64" kindref="member">hmin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>=<sp/>S1.<ref refid="classState_1a6f17867499b4093f2447815f90719ecb" kindref="member">Pn</ref>[i]<sp/>/<sp/>S1.<ref refid="classState_1a28f63f0cd7b0d7943e2cf5c9e1028ae1" kindref="member">Hn</ref>[i];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>[i]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>the<sp/>tridiagonal<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="Dispersion_8h_1a5a035cdd8f6decd41a4650e0828110e9" kindref="member">ThomasAlgorithm</ref>(<ref refid="classDispersion_1ae49bffaf5c4d3d5323e54ce42d8a4127" kindref="member">D1</ref>,<sp/><ref refid="classDispersion_1abfaf79e98f25c390ebaacc26ad59310e" kindref="member">D2</ref>,<sp/><ref refid="classDispersion_1afb9ae6690fa9deb41081640ff64d0500" kindref="member">D3</ref>,<sp/>S1.<ref refid="classState_1aa769a173d9fe2757c1e5fc8fc2ca6ece" kindref="member">Un</ref>,<sp/>i_end);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Dispersion_8cpp_1a5a035cdd8f6decd41a4650e0828110e9" kindref="member">ThomasAlgorithm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*d,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>local<sp/>arrays<sp/>for<sp/>the<sp/>forward<sp/>sweep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*c_prime<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[n];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>forward<sp/>sweep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>c_prime[0]<sp/>=<sp/>c[0]<sp/>/<sp/>b[0];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>d[0]<sp/>/=<sp/>b[0];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>b[i]<sp/>-<sp/>a[i]<sp/>*<sp/>c_prime[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>c_prime[i]<sp/>=<sp/>c[i]<sp/>/<sp/>denom;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>d[i]<sp/>=<sp/>(d[i]<sp/>-<sp/>a[i]<sp/>*<sp/>d[i<sp/>-<sp/>1])<sp/>/<sp/>denom;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>substitution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>d[n<sp/>-<sp/>1]<sp/>=<sp/>d[n<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n<sp/>-<sp/>2;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>d[i]<sp/>=<sp/>d[i]<sp/>-<sp/>c_prime[i]<sp/>*<sp/>d[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>c_prime;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="code/src/Dispersion.cpp"/>
  </compounddef>
</doxygen>
